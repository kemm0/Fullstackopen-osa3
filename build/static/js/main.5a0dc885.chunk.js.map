{"version":3,"sources":["components/Filter.js","components/PersonForm.js","services/NumberService.js","components/Persons.js","components/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["Filter","props","value","filter","onChange","handler","PersonForm","onSubmit","name","onNameChange","number","onNumberChange","type","baseUrl","axios","get","newObject","post","objectID","delete","put","id","Persons","persons","person","toLowerCase","includes","map","filteredperson","onClick","removedID","removedName","window","confirm","NumberService","then","setPersons","Notification","message","notificationStyle","color","messageColor","background","fontSize","borderStyle","borderRadius","padding","marginBottom","length","style","App","useState","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","setMessage","setMessageColor","useEffect","response","data","event","preventDefault","target","foundPerson","find","alert","fixedPerson","i","findIndex","fixedPersons","catch","error","concat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a0dc885.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) => {\n    return(\n        <div>\n        filter shown with <input value={props.filter} \n        onChange={props.handler}/>\n        </div>\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = (props) => {\n    return(\n        <form onSubmit={props.onSubmit}>\n        <div>\n          <h2>Add a new</h2>\n          name: <input value={props.name} \n          onChange={props.onNameChange}/>\n        </div>\n        <div>\n          number: <input value={props.number}\n          onChange={props.onNumberChange}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    )\n}\n\nexport default PersonForm","import axios from 'axios'\nconst baseUrl = 'https://evening-waters-52322.herokuapp.com/api/persons'\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n  }\n  \n  const create = newObject => {\n    return axios.post(baseUrl, newObject)\n  }\n\n  const replace = newObject => {\n    return axios.put(`${baseUrl}/${newObject.id}`,newObject)\n  }\n\n  const remove = objectID => {\n    const response = axios.delete(`${baseUrl}/${objectID}`)\n    return response\n  }\n\n  export default { \n    getAll: getAll, \n    create: create,\n    remove: remove,\n    replace: replace\n  }","import React from 'react'\nimport NumberService from '../services/NumberService'\n\n\nconst Persons = (props) => {\n    const handleRemove = (removedID,removedName) => {\n        const confirmed = window.confirm(`Are you sure you want to remove ${removedName}?`)\n        if(confirmed === true){\n            NumberService\n            .remove(removedID)\n            .then(props.setPersons(props.persons.filter(person => person.id !== removedID)))\n        }\n    }\n    return(\n        <div>\n        {props.persons.filter(person => person.name.toLowerCase().includes(props.filter.toLowerCase())).map((filteredperson) =>\n            <p key={filteredperson.name}>{filteredperson.name} {filteredperson.number} {filteredperson.id}\n            <button onClick={() => handleRemove(filteredperson.id,filteredperson.name)}>remove</button> \n            </p>)}\n        </div>\n    )\n}\n\nexport default Persons","import React from 'react'\n\nconst Notification = ({message,messageColor}) => {\n    const notificationStyle = {\n      color: messageColor,\n      background: 'lightgrey',\n      fontSize: '20px',\n      borderStyle: 'solid',\n      borderRadius: '5px',\n      padding: '10px',\n      marginBottom: '10px'\n    }\n    if (message.length === 0) {\n      return null\n    }\n  \n    return (\n      <div style = {notificationStyle}>\n        {message}\n      </div>\n    )\n  }\n\nexport default Notification","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport NumberService from './services/NumberService'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [newNumber, setNewNumber ] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [message, setMessage] = useState('')\n  const [messageColor, setMessageColor] = useState('green')\n\n  useEffect(() =>{\n    NumberService\n      .getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n  },[])\n\n  const addName = (event) => {\n    event.preventDefault()\n    if(persons.map(person => person.name).includes(newName)){ //name found\n      const foundPerson = persons.find(person => person.name === newName)\n      if(foundPerson.number === newNumber){\n        window.alert(`${newName} is already added to phonebook`)\n      }\n      else{\n        const answer = window.confirm(`${newName} is already added to phonebook, replace\n        old number with the new one?`)\n        if(answer===true){\n          const fixedPerson = {...foundPerson,number: newNumber}\n          NumberService.replace(fixedPerson)\n          .then(response => {\n            const i = persons.findIndex(person => person.name === newName)\n            const fixedPersons = [...persons]\n            fixedPersons[i] = response.data\n            setPersons(fixedPersons)\n          })\n          .catch(error =>{\n            setMessageColor('red')\n            setMessage(`information of ${foundPerson.name} was already deleted from the server. Please refresh page.`)\n          }\n          )\n        }\n      }\n    }\n    else{\n      const person = {name: newName, number: newNumber}\n      NumberService\n      .create(person)\n      .then(response => {\n        setPersons(persons.concat(response.data))\n        setNewName('')\n        setNewNumber('')\n        setMessageColor('green')\n        setMessage(\n          `User '${person.name}' was added`\n        )\n      })\n    }\n  }\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    event.preventDefault()\n    setNewFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} messageColor={messageColor}/>\n      <Filter filter={newFilter} handler={handleFilterChange}/>\n\n      <PersonForm \n      onSubmit={addName}\n      name={newName}\n      onNameChange={handleNameChange}\n      number={newNumber}\n      onNumberChange={handleNumberChange}/>\n\n      <div>\n      <h2>Numbers</h2>\n      <Persons persons={persons} setPersons={setPersons} filter={newFilter}/>\n      </div>\n    </div>\n  )\n\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}